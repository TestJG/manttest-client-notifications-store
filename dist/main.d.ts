// Generated by dts-bundle v0.5.0
// Dependencies for this module:
//   ../rxstore

declare module 'manttest-client-notifications-store' {
	export * from "manttest-client-notifications-store/index";
}

declare module 'manttest-client-notifications-store/index' {
	export * from "manttest-client-notifications-store/store";
}

declare module 'manttest-client-notifications-store/store' {
	import "rxjs/add/observable/of";
	import "rxjs/add/observable/merge";
	import "rxjs/add/observable/empty";
	import "rxjs/add/operator/distinctUntilChanged";
	import "rxjs/add/operator/filter";
	import "rxjs/add/operator/map";
	import "rxjs/add/operator/switchMap";
	import "rxjs/add/operator/startWith";
	import "rxjs/add/operator/observeOn";
	import "rxjs/add/operator/subscribeOn";
	import "rxjs/add/operator/debounceTime";
	import "rxjs/add/operator/timeout";
	import { TypedActionDescription, Store, ICreateStoreOptions } from "rxstore";
	export interface NotificationsState {
	}
	export enum NotificationsStatusModel {
		Error = 0,
		Info = 1,
		Pending = 2,
	}
	export interface NotificationPayload {
		status: NotificationsStatusModel;
		id: string;
		message: string;
		data: any;
	}
	export interface NotificationsEvents {
	}
	export const NotificationsActions: {
		notification: TypedActionDescription<NotificationsState, NotificationPayload>;
	};
	export type NotificationsStore = Store<NotificationsState> & NotificationsEvents;
	export const defaultNotificationsState: () => NotificationsState;
	export const createNotificationsStore: () => (options?: ICreateStoreOptions<NotificationsState> | undefined) => NotificationsStore;
}

